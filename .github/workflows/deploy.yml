name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build site
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          # Create build directory
          mkdir -p build
          
          # Debug: List files in current directory and src folder
          echo "Files in repository root:"
          ls -la
          echo "Files in src folder:"
          ls -la src/
          
          # Check for script.js file in src folder
          if [ -f "src/script.js" ]; then
            echo "Found src/script.js file"
            # Replace API key in JavaScript file and copy to build
            if [ -n "$WEATHER_API_KEY" ]; then
              echo "Injecting OpenWeatherMap API key..."
              sed "s/YOUR_API_KEY_HERE/$WEATHER_API_KEY/g" src/script.js > build/script.js
            else
              echo "No API key found - using demo mode"
              cp src/script.js build/script.js
            fi
          else
            echo "‚ùå src/script.js not found! Available files:"
            find . -name "*.js" -type f
            exit 1
          fi
          
          # Copy other files from src to build directory
          if [ -f "src/index.html" ]; then
            cp src/index.html build/index.html
          else
            echo "‚ùå src/index.html not found!"
            exit 1
          fi
          
          if [ -f "src/styles.css" ]; then
            cp src/styles.css build/styles.css
          else
            echo "‚ùå src/styles.css not found!"
            exit 1
          fi
          
          # Copy img folder if it exists
          if [ -d "src/img" ]; then
            echo "üìÅ Copying img folder..."
            cp -r src/img build/img
          else
            echo "‚ö†Ô∏è src/img folder not found - skipping image assets"
          fi
          
          # Verify the API key was injected (without exposing the key)
          if grep -q "YOUR_API_KEY_HERE" build/script.js; then
            echo "‚ö†Ô∏è  API key not injected - will use demo data"
          else
            echo "‚úÖ API key injected successfully - will use live OpenWeatherMap data"
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4